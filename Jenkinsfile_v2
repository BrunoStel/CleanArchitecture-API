def verifyPathBFF(){
  dir ('pathsModified') {
    if (fileExists('app-backend.txt')){
        return true
    }else {
      echo "Mandandno mensagem sobre sonar BFF"
    }
  }
}

def verifyPathMobile(){
  dir ('pathsModified') {
    if (fileExists('app-mobile.txt')){
      return true
    }else {
      echo "Mandandno mensagem sobre sonar mobile"
    }
      
  }
}
def verifyFilesModified(){
  sh """chmod a+x filesModified.sh && ./filesModified.sh"""
}

def gitLeaksRun(){
  try{
    sh(returnStdout: true, script: "docker run --rm -v ${pwd()}:/app zricethezav/gitleaks:latest detect --no-git --verbose --source=/app/filesToAnalyse ")
  }catch(error){
  }
}
def horusecRun(){
    sh "cd filesToAnalyse && docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v \$(pwd):/src horuszup/horusec-cli:latest horusec start -p /src -P \$(pwd) --config-file-path src/horusec-config.json"
}

pipeline {
    agent any
    stages{
          stage('Verificando Arquivos modificados'){
          steps{
              script{
                verifyFilesModified()
              }
          }
        }
         stage('Horusec Analysis'){
          steps{
              script{
                horusecRun()
              }
          }
        }
        stage('Gitleaks Analysis'){
          steps{
              script{
                gitLeaksRun()
              }
          }
        }
        // stage('OWASP Zap'){
        //   steps{
        //       script{
        //         sh "yarn start"
        //         sleep(30)
        //         sh "docker run --rm -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:5050"
        //       }
        //   }
        // }
        stage('Sonar - BFF') {
          when {
              expression { verifyPathBFF() } 
          }
          steps {
              echo "RODANDO SONAR BFF"
          }
        }
        stage('Sonar - Mobile') {
          when {
              expression { verifyPathMobile() } 
          }
          steps {
              echo "RODANDO SONAR MOBILE"
          }
        }
        stage('Delete dir'){
          steps{
            script{
              deleteDir()
            }
          }
        }
    }
}